#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
    require-prior-idle-ms = <10>;
};

&mt { 
    tapping-term-ms = <150>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <150>;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };
};

/ {
    combos {
        compatible = "zmk,combos";

        LeftClickRight {
            bindings = <&mkp LCLK>;
            key-positions = <6 7>;
        };

        RightClickRight {
            bindings = <&mkp RCLK>;
            key-positions = <7 8>;
        };

        layer3 {
            timeout-ms = <50>;
            key-positions = <38 39>;
            bindings = <&mo 3>;
       };
    };

    behaviors {
        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <34>;
            tapping-term-ms = <100>;
        };
    };

    macros {
        quicker: quicker {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LCTRL>, <&macro_press>;

            label = "QUICKER";
        };
         roundbkt: round_brackets {
            label= "round_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LPAR &kp RPAR>;
         };
         
         squarebkt: square_brackets {
            label= "square_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LBKT &kp RBKT>;
         };
         
         curlbkt: curl_brackets {
            label= "curl_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LBRC &kp RBRC>;
         };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERT {
            bindings = <
  &kp Q       &kp W       &kp E        &kp R        &kp T             &kp Y        &kp U        &kp I        &kp O       &kp P
  &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F  &kp G             &kp H        &mt RSHFT J  &mt RCTRL K  &mt RALT L  &mt SEMI SQT
  &lt 5 Z     &lt 4 X     &kp C        &kp V        &kp B             &lt 2 N      &kp M        &kp COMMA    &kp DOT     &mt BSLH FSLH
                          &lt 2 ESC    &lt 1 SPACE  &lt 6 TAB         &lt 3 ENTER  &mt RSHFT BSPC
            >;
        };

        NUMNAV {
            bindings = <
  &kp KP_PLUS     &kp N1     &kp N2     &kp N3     &kp LPAR              &kp RPAR     &kp HOME  &kp UP   &kp END   &kp PG_UP
  &kp KP_MINUS    &kp N4     &kp N5     &kp N6     &kp N0                &kp EQUAL    &kp LEFT  &kp DOWN &kp RIGHT &kp PG_DN
  &kp KP_MULTIPLY &kp N7     &kp N8     &kp N9     &kp DOT               &kp ENTER    &kp CAPS  &none    &none     &none
                             &none      &none      &none                 &kp DEL      &kp BSPC
            >;
        };

        SYMFUN {
            bindings = <
  &roundbkt  &squarebkt &curlbkt       &kp GRAVE      &kp TILDE             &kp CARET  &kp F1  &kp F2   &kp F3   &kp F4
  &kp EXCL   &kp AT     &kp HASH       &kp DOLLAR     &kp PIPE              &none      &kp F5  &kp F6   &kp F7   &kp F8
  &kp PRCNT  &kp CARET  &kp AMPERSAND  &kp BACKSLASH  &kp UNDERSCORE        &none      &kp F9  &kp F10  &kp F11  &kp F12
                        &none          &none          &none                 &none      &none
            >;
        };

        FUN {
            bindings = <
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &none        &none         &none         &bt BT_CLR    &none
  &none         &none         &none         &none         &none                 &none        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP
  &none         &none         &none         &none         &bootloader           &bootloader  &none         &none         &none         &none
                              &sys_reset    &none         &none                 &none        &none
            >;
        };

        MOUSE {
            bindings = <
  &none     &none     &none      &none      &none       &none  &none      &none      &none  &none
  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none       &none  &mkp LCLK  &mkp MCLK  &mkp RCLK  &none
  &none     &none     &none      &none      &none       &none  &none      &none      &none  &none
                      &none      &none      &none       &none  &none
            >;
        };

        SCROLL {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans
            >;
        };

        MSNIPE {
            bindings = <
  &trans  &trans  &trans     &trans     &trans       &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans     &trans     &trans       &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans     &trans     &trans       &trans  &trans  &trans  &trans  &trans
                  &mkp RCLK  &mkp LCLK  &mkp MCLK    &trans  &trans
            >;
        };
    };
};
